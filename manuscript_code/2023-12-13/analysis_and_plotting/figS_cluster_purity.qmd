---
title: "figS_cluster_purity"
format: html
---

# Load packages
```{r, include=F}
library(tidyverse)
library(ggpointdensity)
library(hash)
library(pheatmap)
library(RColorBrewer)
library(viridis)
library(stringr) # for searching strtings for patterns eg str_count("1,2,3", ',') --> 2
library(patchwork)
library(svglite)

library(pheatmap)

library(igraph)
library(ggraph)
```

# Load associated code and data
```{r, include=F}
source("constants.R")
source("general_functions.R")
source("load_data.R")
```


# Cluster purity - Determine the avearge TMscore for each cluster between the cluster rep and all members
# Note that this takes into account alignments that don't occur due to foldseek lack of sensitivity. Manually reviewing some of these cases makes it clear that they are structurally similar despite the lack of foldseek alignments. 
# The way to really show that purity is okay is to take one cluster (e.g. cluster 1, 17_kDa_protein__YP_008855212__Olive_viral_satellite_RNA__1250316, which has a very low avg_alntmscore of 0.05) and do DALI between all pairs
```{r}
reps_vs_all <- read_tsv("inputs/reps_vs_all_no_cov_cutoff.m8", col_names = c("query", "target", "fident", "alnlen", "qlen", "tlen", "mismatch", "gapopen", "qstart", "qend", "tstart", "tend", "evalue", "bits", "alntmscore")) %>%
  mutate(query = str_replace_all(query, ".pdb", ""),
         target = str_replace_all(target, ".pdb", "")
  )

# Filter to query, target, and alntmscore, and rename query to structure_rep and target to cluster_member
reps_vs_all <- reps_vs_all %>%
  select(structure_rep = query, cluster_member = target, alntmscore)

# Find all cluster_rep, cluster_member combos
structure_rep_to_member <- clusters %>%
  select(structure_rep, cluster_member)

# Get a list of clusters with at least 5 members
big_cluster_struc_rep_list <- clusters %>%
  group_by(structure_rep) %>%
  summarize(n_members = n()) %>%
  filter(n_members >= 5) %>%
  pull(structure_rep)
  

structure_rep_to_member %>%
  
  # Left join - this keeps only alignments that are cluster_rep - cluster_member pairs
  left_join(reps_vs_all, by = c("structure_rep", "cluster_member")) %>%
  
  # Remove self alignments
  filter(!structure_rep == cluster_member) %>%
  
  # Set alntmscore to 0 when missing
  mutate(alntmscore = ifelse(is.na(alntmscore), 0, alntmscore)) %>%
  
  # Filter to only plot clusters with at least 5 members
  filter(structure_rep %in% big_cluster_struc_rep_list) %>%
  
  # Calculate average alntmscore for each cluster
  group_by(structure_rep) %>%
  summarize(avg_alntmscore = mean(alntmscore)) %>%
  
  # plot
  ggplot() +

  stat_density(
    aes(x=avg_alntmscore)
  ) +

  coord_cartesian(xlim=c(0, 1))
  


structure_rep_to_member %>%
  
  # Left join - this keeps only alignments that are cluster_rep - cluster_member pairs
  left_join(reps_vs_all, by = c("structure_rep", "cluster_member")) %>%
  
  # Remove self alignments
  filter(!structure_rep == cluster_member) %>%
  
  # Set alntmscore to 0 when missing
  mutate(alntmscore = ifelse(is.na(alntmscore), 0, alntmscore)) %>%
  
  # Filter to only plot clusters with at least 5 members
  filter(structure_rep %in% big_cluster_struc_rep_list) %>%
  
  ggplot() +

  stat_density(
    aes(x=alntmscore)
  ) +

  coord_cartesian(xlim=c(0, 1))
  


structure_rep_to_member %>%
  
  # Left join - this keeps only alignments that are cluster_rep - cluster_member pairs
  left_join(reps_vs_all, by = c("structure_rep", "cluster_member")) %>%
  
  # Remove self alignments
  filter(!structure_rep == cluster_member) %>%
  
  # Set alntmscore to 0 when missing
  mutate(alntmscore = ifelse(is.na(alntmscore), 0, alntmscore)) %>%
  
  # Filter to only plot clusters with at least 5 members
  filter(structure_rep %in% big_cluster_struc_rep_list) %>%
  
  mutate(status = ifelse(alntmscore == 0, "Unaligned", "Aligned")) %>%
  count(status)


structure_rep_to_member %>%
  
  # Left join - this keeps only alignments that are cluster_rep - cluster_member pairs
  left_join(reps_vs_all, by = c("structure_rep", "cluster_member")) %>%
  
  # Remove self alignments
  filter(!structure_rep == cluster_member) %>%
  
  # Set alntmscore to 0 when missing
  mutate(alntmscore = ifelse(is.na(alntmscore), 0, alntmscore)) %>%
  
  # Filter to only plot clusters with at least 5 members
  filter(structure_rep %in% big_cluster_struc_rep_list) %>%
  
  mutate(status = ifelse(alntmscore == 0, "Unaligned", "Aligned")) %>%
  filter(status == "Unaligned")
```


# Check 28 and 164
```{r}

# 164: DNA_ligase__YP_007676235__Micromonas_pusilla_virus_12T__755272	
# 28: A240L__YP_009703091__African_swine_fever_virus__10497	


structure_rep_to_member %>%
  
  # Left join - this keeps only alignments that are cluster_rep - cluster_member pairs
  left_join(reps_vs_all, by = c("structure_rep", "cluster_member")) %>%
  
  # Remove self alignments
  filter(!structure_rep == cluster_member) %>%
  
  # Set alntmscore to 0 when missing
  mutate(alntmscore = ifelse(is.na(alntmscore), 0, alntmscore)) %>%
  filter(structure_rep == "A240L__YP_009703091__African_swine_fever_virus__10497")
```

