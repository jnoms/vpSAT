---
title: "figS1"
format: html
---


# Load packages
```{r, include=F}
library(tidyverse)
library(ggpointdensity)
library(hash)
library(pheatmap)
library(RColorBrewer)
library(viridis)
library(stringr) # for searching strtings for patterns eg str_count("1,2,3", ',') --> 2
library(patchwork)
library(svglite)

library(pheatmap)

library(igraph)
library(ggraph)
```

# Load associated code and data
```{r, include=F}
source("constants.R")
source("general_functions.R")
source("load_data.R")
```

# Highlight the clusters in the most genome types
```{r}
# For each cluster, need to determine fraction of families in each genome type
clusters_fam_genome_type <- clusters %>%
  
  # Almost certainly actually a rhabdovirus - it's misclassified!!!
  filter(species != "Cacao_swollen_shoot_Togo_A_virus") %>%
  
  select(cluster_ID, family) %>%
  filter(!is.na(family)) %>%
  distinct() %>%
  mutate(genome_type = hash_lookup(genome_types_hash, family))
  

# Can use this for ordering
top_list <- clusters_fam_genome_type %>%
  group_by(cluster_ID) %>%
  summarize(n_fam = n_distinct(family),
            n_type = n_distinct(genome_type)) %>%
  arrange(-n_type, -n_fam) %>%
  filter(n_type > 1) %>%
  head(50) %>%
  pull(cluster_ID)


# Get counts of families for each genome_type
genome_type_family_count <- clusters %>%
  select(family) %>%
  distinct()  %>%
  filter(!is.na(family)) %>%
  mutate(genome_type = hash_lookup(genome_types_hash, family)) %>%
  group_by(genome_type) %>%
  summarize(n_fams = n_distinct(family)) %>%
  filter(!is.na(genome_type))
genome_type_family_count_hash <- hash(genome_type_family_count$genome_type, genome_type_family_count$n_fams)




top_multi_type_cluseters_plt <- clusters_fam_genome_type %>%
  group_by(cluster_ID, genome_type) %>%
  summarize(n_fam = n_distinct(family)) %>%
  arrange(-n_fam) %>%
  ungroup() %>%
  
  mutate(genome_type_fam_total = hash_lookup(genome_type_family_count_hash, genome_type)) %>%
  mutate(p_fam = n_fam/genome_type_fam_total) %>%
  filter(!is.na(genome_type)) %>%
  
  filter(cluster_ID %in% top_list) %>%
  mutate(cluster_ID = factor(cluster_ID, ordered=T, levels=rev(top_list))) %>%
  mutate(genome_type = case_when(
    genome_type == "dsDNA (large)" ~ "dsDNA\n(large)",
    genome_type == "dsDNA (medium)" ~ "dsDNA\n(medium)",
    genome_type == "dsDNA (small)" ~ "dsDNA\n(small)",
    genome_type == "RNA (Other)" ~ "RNA\n(Other)",
    TRUE ~ genome_type
  ))  %>%
  mutate(genome_type = factor(genome_type, ordered=T, levels=genome_type_order_newlines)) %>%
  
  ggplot() +

  geom_col(
    aes(y=cluster_ID, x = p_fam, fill=genome_type),
    show.legend = F,
    color="black"
  ) +
  
  geom_vline(xintercept = 0) + 
  
  facet_wrap(~genome_type, nrow=1) +
  scale_fill_manual(values = genome_type_colors_newlines) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linetype = "dashed")
    ) +
  scale_x_continuous(expand = c(0,0), breaks = c(0, 0.5, 1), labels = c(0, 0.5, 1)) +
  ylab("Protein Cluster") +
  xlab("Percentage of Families")

top_multi_type_cluseters_plt
ggsave("figs/separate/top_multi_type_cluseters_plt.png", width=12, height=20, units="cm")
```